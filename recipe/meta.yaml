{% set version = "7.0.2" %}
{% set python_min = python_min | default("3.11") %}
{% set min_py = python_min | replace('.', '') | int %}
{% set py = py | default(min_py) %}

package:
  name: astropy-base
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/a/astropy/astropy-{{ version }}.tar.gz
  sha256: 11cd23037cfb3de460472078b88c8e942b0838ef6e79fca2ca24d9ccc434e969

build:
  number: 0
  {% if py < min_py %}
  skip: true
  {% endif %}
  entry_points:
    - fits2bitmap = astropy.visualization.scripts.fits2bitmap:main
    - fitscheck = astropy.io.fits.scripts.fitscheck:main
    - fitsdiff = astropy.io.fits.scripts.fitsdiff:main
    - fitsheader = astropy.io.fits.scripts.fitsheader:main
    - fitsinfo = astropy.io.fits.scripts.fitsinfo:main
    - samp_hub = astropy.samp.hub_script:hub_script
    - volint = astropy.io.votable.volint:main
    - wcslint = astropy.wcs.wcslint:main

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython >=3.0.0,<3.1.0                  # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
  host:
    - python
    - pip
    - setuptools
    - jinja2 >=3
    - cython >=3.0.0,<3.1.0
    - setuptools_scm >=6.2
    - extension-helpers =1
    - numpy
  run:
    - python
    - numpy >=1.23.2
    - pyerfa >=2.0.1.1
    - astropy-iers-data >=0.2025.1.31.12.41.4
    - pyyaml >=6.0.0
    - packaging >=22.0.0
  run_constrained:
    # We must prevent installing old astropy and new astropy-base together
    - astropy >=7.0.0

test:
  requires:
    - pytest-astropy
  commands:
    - fits2bitmap --help
    - fitscheck --help
    - fitsdiff --help
    - fitsheader --help
    - fitsinfo --help
    - samp_hub --help
    - volint --help
    - wcslint --help
    # We run a subset of the tests which are the most likely to have
    # issues because they rely on C extensions and bundled libraries
    - pytest --pyargs astropy.wcs astropy.io.fits
    # Skipping most tests on aarch64/ppc64le because they take too long
    - pytest --pyargs astropy.time astropy.convolution astropy.io.ascii  # [not (ppc64le or aarch64)]
  imports:
    - astropy
    - astropy.cosmology.flrw.scalar_inv_efuncs
    - astropy.io.ascii.cparser
    - astropy.io.votable.tablewriter
    - astropy.modeling.projections
    - astropy.timeseries.periodograms.lombscargle.implementations.cython_impl
    - astropy.table._column_mixins
    - astropy.table._np_utils
    - astropy.utils._compiler
    - astropy.utils.xml._iterparser
    - astropy.wcs._wcs

outputs:
  - name: astropy-base
    build:
      script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

# build this exactly once, on the oldest supported python, to avoid migration issues
{% if py==min_py and linux64 %}
  - name: astropy
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage('astropy-base', max_pin="x.x.x") }}
        - matplotlib-base >=3.6.0
        - scipy >=1.9.2
        - certifi >=2022.6.15.1
        - ipython >=8.0.0
        - ipywidgets
        - ipykernel
        - ipydatagrid
        # We also need numpy from dask[array] but we are already going to install that.
        - dask-core >=2022.5.1
        - h5py >=3.8.0
        - pyarrow >=10.0.1
        - beautifulsoup4 >=4.9.3
        - html5lib >=1.1
        - bleach >=3.2.1
        - pandas >=2.0
        - sortedcontainers >=1.5.7
        - pytz >=2016.10
        - jplephem >=2.6
        - mpmath >=1.2.1
        - bottleneck >=1.3.3
        - fsspec >=2023.4.0
        # fsspec optional deps
        - aiohttp
        - s3fs >=2023.4.0
    test:
      requires:
        - python {{ python_min }}
        - pytest-astropy
      commands:
        - pip check
        - fits2bitmap --help
        - fitscheck --help
        - fitsdiff --help
        - fitsheader --help
        - fitsinfo --help
        - samp_hub --help
        - volint --help
        - wcslint --help
        - pytest --pyargs astropy
      imports:
        - astropy
{% endif %}

about:
  home: http://www.astropy.org/
  license: BSD-3-Clause
  license_file: LICENSE.rst
  summary: Community-developed Python Library for Astronomy
  description: |
    The Astropy Project is a community effort to develop a single package for
    Astronomy in Python. It contains core functionality and common tools
    needed for performing astronomy and astrophysics research with Python.
  doc_url: http://docs.astropy.org/en/stable/
  dev_url: https://github.com/astropy/astropy

extra:
  feedstock-name: astropy
  recipe-maintainers:
    - astrofrog
    - mwcraig
    - bsipocz
    - Cadair
